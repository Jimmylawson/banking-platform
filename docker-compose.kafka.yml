version: "3.8"

services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    environment:
      # KRaft single-node
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker

      # Listeners:
      #   INTERNAL  -> used by other containers on the same Docker network
      #   EXTERNAL  -> exposed to your host at localhost:9094
      #   CONTROLLER-> KRaft quorum
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9094,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      # expose EXTERNAL listener to your host ONLY
      - "127.0.0.1:9092:9092"
    healthcheck:
      test: ["CMD", "bash", "-lc", "unset KAFKA_TLS_PASSWORD && /opt/bitnami/kafka/bin/kafka-metadata-quorum.sh describe --status --bootstrap-server localhost:9094 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      # UI runs IN Docker, so it uses the INTERNAL listener
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - "8087:8080"